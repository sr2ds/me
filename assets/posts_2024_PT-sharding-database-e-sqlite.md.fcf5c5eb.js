import{_ as o,c as n,o as e,d as a,a as s}from"./app.d643be22.js";const h=JSON.parse('{"title":"Sharding Database e SQLite","description":"","frontmatter":{},"headers":[{"level":2,"title":"O problema","slug":"o-problema","link":"#o-problema","children":[]},{"level":2,"title":"Buscando solu\xE7\xF5es","slug":"buscando-solucoes","link":"#buscando-solucoes","children":[]},{"level":2,"title":"SQLite","slug":"sqlite","link":"#sqlite","children":[]}],"relativePath":"posts/2024/PT-sharding-database-e-sqlite.md"}'),p={name:"posts/2024/PT-sharding-database-e-sqlite.md"},l=a('<h1 id="sharding-database-e-sqlite" tabindex="-1">Sharding Database e SQLite <a class="header-anchor" href="#sharding-database-e-sqlite" aria-hidden="true">#</a></h1><p>Recentemente, precisei buscar uma solu\xE7\xE3o para distribuir uma \xFAnica base de dados em m\xFAltiplos arquivos. Dadas algumas premissas e necessidades, fui buscar op\xE7\xF5es, entender um pouco sobre como isso funciona (limita\xE7\xF5es, pr\xF3s, contras, etc.), e vou listar aqui um pouco desse aprendizado, apresentar os problemas e mostrar as solu\xE7\xF5es que fui encontrando.</p><p>Para contextualizar, isso se refere ao projeto <a href="https://github.com/sr2ds/coeur" target="_blank" rel="noreferrer">Coeur</a> e vou trazer exemplos de c\xF3digo de l\xE1 para c\xE1.</p><h2 id="o-problema" tabindex="-1">O problema <a class="header-anchor" href="#o-problema" aria-hidden="true">#</a></h2>',4),t=s("iframe",{src:"https://giphy.com/embed/ddugUSEmg5IFM8cPSD",width:"480",height:"360",style:{},frameBorder:"0",class:"giphy-embed",allowFullScreen:""},null,-1),r=a('<p><a href="https://giphy.com/gifs/ProBitExchange-meme-running-joke-ddugUSEmg5IFM8cPSD">via GIPHY</a></p><p>O GitHub limita o tamanho dos commits a 100 MB. Ou seja, se voc\xEA est\xE1 tentando fazer commit de uma base <code>SQLite</code> com mais de 100 MB, voc\xEA n\xE3o conseguir\xE1.</p><p>Ali\xE1s, voc\xEA vai conseguir depois de habilitar o <a href="https://docs.github.com/en/repositories/working-with-files/managing-large-files/configuring-git-large-file-storage" target="_blank" rel="noreferrer"><code>LFS</code></a> no seu reposit\xF3rio, e de fato isso funcionar\xE1. O problema \xE9 que isso vai te levar \xE0 beira do upgrade do data plan do GitHub e, assim que voc\xEA consumir <code>1 GB</code> de banda, precisar\xE1 pagar para continuar seus commits.</p><p>Ent\xE3o, precisei ir em busca de uma forma para que o arquivo contendo os dados dos projetos fosse dividido em alguns arquivos menores, permitindo o uso do reposit\xF3rio comum do GitHub. E chegamos ao que significa Sharding.</p><blockquote><p>Sharding \xE9 uma t\xE9cnica de particionamento de dados que distribui os dados por v\xE1rias m\xE1quinas ou arquivos, o que pode ajudar a aumentar a escalabilidade e a performance de um banco de dados.</p></blockquote><p>Se voc\xEA est\xE1 se perguntando por que eu estou armazenando dados em um reposit\xF3rio ao inv\xE9s de subir uma inst\xE2ncia em alguma cloud, \xE9 porque a premissa do <code>Coeur</code> \xE9 permitir que blogs sejam criados e mantidos utilizando o m\xE1ximo de recursos gratuitos. Ent\xE3o, mantemos tudo que \xE9 necess\xE1rio no reposit\xF3rio e fazemos deploy da build para o Netlify ou GitHub Pages.</p><p>Pronto, dada a compreens\xE3o do problema, vamos pesquisar por solu\xE7\xF5es.</p><h2 id="buscando-solucoes" tabindex="-1">Buscando solu\xE7\xF5es <a class="header-anchor" href="#buscando-solucoes" aria-hidden="true">#</a></h2>',8),c=s("iframe",{src:"https://giphy.com/embed/L1ZqGzJDFYC7C",width:"480",height:"480",style:{},frameBorder:"0",class:"giphy-embed",allowFullScreen:""},null,-1),F=a(`<p><a href="https://giphy.com/gifs/mrw-dont-length-L1ZqGzJDFYC7C">via GIPHY</a></p><p>Eu quero usar um banco de dados, ao inv\xE9s de arquivos como os outros frameworks fazem, pois preciso fazer coisas como filtro, pagina\xE7\xE3o e ordena\xE7\xE3o sem a necessidade de popular os dados na mem\xF3ria RAM e fazer isso em tempo de execu\xE7\xE3o. O fato do design do <code>Coeur</code> ser baseado nessa premissa me permite ter um \xF3timo controle do uso dos recursos que minhas builds consomem, independente do tamanho do projeto.</p><p>Dito isso, pensando nas solu\xE7\xF5es mais comuns de banco de dados que conhe\xE7o, seja relacionais ou n\xE3o-relacionais, como <code>MySQL</code>, <code>PostgreSQL</code> ou <code>MongoDB</code>, por exemplo, todos carecem do servi\xE7o estar em execu\xE7\xE3o para serem consumidos.</p><p>Ou seja, voc\xEA precisa dar play no <code>mysqld</code> para poder manipular o banco de dados <code>MySQL</code>.</p><p>No final das contas, todos criam arquivos locais, mas possuem essa &quot;interface&quot; para que o banco de dados funcione. Essa &quot;interface&quot; \xE9 quem faz a gest\xE3o das conex\xF5es, processa consultas, etc. Honestamente, n\xE3o sei se seria poss\xEDvel fazer query em qualquer um deles por baixo dos panos e, mesmo que fosse, a curva para fazer esse tipo de tr\xE2mite me parece muito maior. Ent\xE3o, as solu\xE7\xF5es que conhecia n\xE3o iriam me ajudar.</p><p>Encontrei alguns nomes como: TiDB, RocksDB, Apache Derby e CockroachDB.</p><p>Belos nomes e tamb\xE9m s\xE3o legais e, com exce\xE7\xE3o do RocksDB, que \xE9 baseado em chave-valor, os outros poderiam talvez me atender bem e o TiDB at\xE9 faz o sharding de forma autom\xE1tica. Ou seja, ele quebra o arquivo sozinho e faz a gest\xE3o disso por conta pr\xF3pria. De fato, seria uma m\xE3o na roda.</p><p>Mas a\xED me deparei com outro problema. Est\xE1 planejado em meu roadmap fornecer uma maneira de administrar os dados de uma maneira bem simples depois, tipo um painel para manipular os dados, criar, editar, etc. Eu poderia fazer um frontend para isso, criar as rotas, etc. Independente do banco de dados escolhido, vai funcionar se eu criar tudo na m\xE3o. Mas n\xE3o faz muito sentido eu gastar muito tempo com essa parte visual de frontend, ent\xE3o considerei usar o <code>sqladmin</code> com <code>FastAPI</code> e <code>SQLAlchemy</code>. \xC9 super simples e amig\xE1vel, n\xE3o precisarei fazer nenhum frontend pr\xF3prio e poderei resolver essa quest\xE3o muito bem. \xC9 bonito, funcional e resolver\xE1 bem. Mas isso me colocou outro impasse, pois estes outros bancos n\xE3o s\xE3o exatamente compat\xEDveis com <code>SQLAlchemy</code>. Ent\xE3o, se eu optasse pelo <code>TiDB</code>, por exemplo, ganharia o benef\xEDcio de ter o sharding feito automaticamente, mas perderia o benef\xEDcio de usar a interface <code>sqladmin</code>, a qual sei que \xE9 eficiente e me permitir\xE1 n\xE3o me preocupar com isso depois. Nota: Talvez o projeto do painel ainda precisar\xE1 de algum n\xEDvel de personaliza\xE7\xE3o por conta do sharding, vamos ver.</p><p>Foi ent\xE3o que, ap\xF3s alguns dias pensando e analisando, considerei que o melhor cen\xE1rio (talvez n\xE3o seja o melhor, mas resolveu bem) seria eu abra\xE7ar o &quot;sharding&quot; manualmente e continuar no <code>SQLite</code> mesmo, o bom e velho <code>SQLite</code>. Ou seja, considerando que ele d\xEA suporte a isso e eu j\xE1 tinha as coisas funcionando com ele, bora fazer o <code>sharding</code> nele mesmo.</p><p>E foi o que fiz. Por\xE9m, ainda h\xE1 uma ressalva, por padr\xE3o o SQLite s\xF3 permite fazer attach de 10 bases de dados. Por hora, est\xE1 ok. Mas no futuro, para utiliz\xE1-lo ser\xE1 necess\xE1rio re-compilar o <code>sqlite</code> fazer aumento desse limite. E \xE9 algo relativamente simples, ser\xE1 tranquilo de criar uma instru\xE7\xE3o para isso depois, ent\xE3o vamos assim.</p><h2 id="sqlite" tabindex="-1">SQLite <a class="header-anchor" href="#sqlite" aria-hidden="true">#</a></h2><p>Se voc\xEA nunca mexeu com SQLite, isso pode te ajudar a entender melhor:</p><blockquote><p>SQLite \xE9 um sistema de gerenciamento de banco de dados relacional (RDBMS) leve e aut\xF4nomo que n\xE3o requer um servidor separado para operar. Ele \xE9 amplamente utilizado em aplica\xE7\xF5es onde um banco de dados completo, com funcionalidades de um servidor, n\xE3o \xE9 necess\xE1rio, oferecendo uma solu\xE7\xE3o simples, eficiente e de f\xE1cil implanta\xE7\xE3o. Aqui est\xE3o algumas caracter\xEDsticas e usos importantes do SQLite:</p><p>Aut\xF4nomo e Sem Servidor: Diferente de muitos outros RDBMSs que requerem um servidor separado para funcionar (como MySQL ou PostgreSQL), o SQLite \xE9 integrado diretamente \xE0 aplica\xE7\xE3o. Ele armazena dados em um \xFAnico arquivo de banco de dados no sistema de arquivos do host.</p><p>Portabilidade: Como o banco de dados \xE9 apenas um arquivo, \xE9 f\xE1cil de transportar entre diferentes sistemas operacionais. Basta copiar o arquivo para mover o banco de dados.</p><p>Desempenho: Para muitas aplica\xE7\xF5es, especialmente aquelas que n\xE3o necessitam de um sistema de banco de dados complexo, o SQLite pode ser mais r\xE1pido que outros RDBMSs, devido \xE0 aus\xEAncia de sobrecarga de comunica\xE7\xE3o entre um cliente e servidor.</p><p>Tamanho Compacto: O c\xF3digo-fonte do SQLite \xE9 muito pequeno em compara\xE7\xE3o com outros sistemas de gerenciamento de banco de dados, tornando-o adequado para dispositivos com recursos limitados, como smartphones e dispositivos IoT.</p><p>Facilidade de Uso: A instala\xE7\xE3o e a configura\xE7\xE3o s\xE3o simples. N\xE3o h\xE1 necessidade de um administrador de banco de dados (DBA) para configurar ou manter o SQLite.</p><p>ACID: SQLite \xE9 totalmente compat\xEDvel com ACID (Atomicidade, Consist\xEAncia, Isolamento, Durabilidade), garantindo a integridade dos dados, mesmo ap\xF3s falhas de sistema.</p></blockquote><p>O <code>Coeur</code> basicamente possui duas opera\xE7\xF5es: a primeira s\xE3o os inserts que s\xE3o feitos ao executar o script de importa\xE7\xE3o de posts markdown. Ou seja, dado um diret\xF3rio com os arquivos markdown, o script vai iterar recursivamente e converter cada markdown para uma entrada no banco de dados.</p><p>A segunda \xE9 para fazer as builds, pois precisamos iterar de forma paginada em todos os registros gravados para fazer a cria\xE7\xE3o dos arquivos est\xE1ticos.</p><p>A primeira opera\xE7\xE3o, que faz o INSERT, \xE9 quem usa de forma excessiva a magia do sharding e \xE9 a respons\xE1vel por fazer esse particionamento. As opera\xE7\xF5es de consulta tamb\xE9m precisam de altera\xE7\xF5es, pois agora a pagina\xE7\xE3o ser\xE1 feita considerando bancos anexados ao prim\xE1rio, e n\xE3o em um \xFAnico mais. Al\xE9m disso, infelizmente o <code>SQLAlchemy.orm</code> n\xE3o simplifica esse tipo de opera\xE7\xE3o, ent\xE3o tamb\xE9m foi necess\xE1rio alguma customiza\xE7\xE3o no Model que temos l\xE1.</p><p>N\xE3o foi muito \xF3bvio separar as responsabilidades, mas consegui chegar em um ponto aceit\xE1vel de abstra\xE7\xE3o e, por fim, temos duas classes: a <code>ShardingManager</code>, que \xE9 respons\xE1vel por criar os bancos dinamicamente, analisar se est\xE1 na hora de criar um novo banco, anexar os bancos na sess\xE3o principal e gerar a query que utiliza todos os bancos ao mesmo tempo e a <code>DatabaseManager</code>que cuida da sess\xE3o e opera\xE7\xF5es.</p><p>Inclusive, vale aqui uma pausa para explicar isso.</p><p>Por conta do <code>SQLite</code> n\xE3o fazer a gest\xE3o do particionamento sozinho, temos que construir a intelig\xEAncia que vai analisar se o banco de dados atual j\xE1 atingiu o m\xE1ximo de tamanho desejado e, caso sim, criar o banco e anex\xE1-lo na sess\xE3o utilizada. Ou seja, se os bancos j\xE1 est\xE3o criados, a sess\xE3o precisa iniciar e j\xE1 anexar todos. Caso n\xE3o estejam, precisamos fazer isso automaticamente.</p><p>Al\xE9m disso, precisamos customizar o SELECT principal para fazer UNION ALL em todos os SELECTs, banco por banco.</p><p>Voc\xEA pode ver o arquivo completo <a href="https://github.com/sr2ds/coeur/blob/main/coeur/apps/ssg/db.py" target="_blank" rel="noreferrer">aqui: db.py</a>, mas vou colar a classe aqui e fazer alguns coment\xE1rios explicativos para analisarmos juntos cada m\xE9todo:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ShardingManager</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># tamanho m\xE1ximo em MB que eu quero considerar base para parar de usar o arquivo</span></span>
<span class="line"><span style="color:#A6ACCD;">    MAX_FILE_SIZE_MB </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># nome do banco padr\xE3o</span></span>
<span class="line"><span style="color:#A6ACCD;">    DB1_NAME </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">db1.sqlite</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#FFCB6B;">staticmethod</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># simplesmente retorna todos os arquivos dentro do diretorio db, onde os bancos s\xE3o criados</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># isso \xE9 usado para quase tudo, tipo anexar bancos, saber qual \xE9 o menor, etc</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_databases</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">filename </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> filename </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> os</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listdir</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">db</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#FFCB6B;">staticmethod</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># baseado na lista de bancos que existem, eu preciso saber o que possui o tamanho menor</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># e retornar somente o nome dele, sem extenc\xE3o</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_smallest_db</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">        smallest_db </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">min</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">            ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_databases</span><span style="color:#89DDFF;">(),</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;">lambda</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">db</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> os</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getsize</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;db/</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">db</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> os</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splitext</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">smallest_db</span><span style="color:#89DDFF;">)[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#FFCB6B;">staticmethod</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># para fazer as queries precisa-se especificar o nome da tabela contendo o banco</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># com excess\xE3o do banco 1, que apenas o nome da tabela \xE9 necess\xE1rio</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_get_posts_table_by_db</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">db_file</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        db </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> os</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splitext</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">db_file</span><span style="color:#89DDFF;">)[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">posts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> db </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">db1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;</span><span style="color:#F78C6C;">{</span><span style="color:#A6ACCD;">db</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">.posts&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#FFCB6B;">staticmethod</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># cria o banco de dados novo</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># sendo que sempre ser\xE1 em n\xFAmerica incremental: 1,2,3,4, etc</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># \xE9 necess\xE1rio criar uma nova sess\xE3o para fazer isso pois esse m\xE9todo</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># \xE9 executado ap\xF3s um commit na sess\xE3o atual</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># o novo banco \xE9 criado utilizando a estrutura de um banco j\xE1 existente</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">create_new_database</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">        engine </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">create_engine</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;sqlite:///db/</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">DB1_NAME</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        Session </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sessionmaker</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">bind</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">engine</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        session </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Session</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        new_db_filename </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;db</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_databases</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1}</span><span style="color:#C3E88D;">.sqlite&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        file_prefix </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> os</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splitext</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">new_db_filename</span><span style="color:#89DDFF;">)[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">        session</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">execute</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">text</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;ATTACH DATABASE &#39;db/</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">new_db_filename</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&#39; AS </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">file_prefix</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">        session</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">execute</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">text</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;CREATE TABLE </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">file_prefix</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">.posts AS SELECT * FROM posts WHERE 0&quot;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">        session</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">commit</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        session</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#FFCB6B;">staticmethod</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># este m\xE9todo ajuda as futuras queries a serem executadas considerando todas as tabelas</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># lembrando que precisa especificar db.table para query, ent\xE3o aqui a gente faz para todos dbs</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">generate_union_posts_query</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">fields</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">str</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        union_queries </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> filename </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_databases</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">            table_name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_get_posts_table_by_db</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">filename</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            union_queries</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;SELECT </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">fields</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;"> FROM </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">table_name</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> UNION ALL </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">union_queries</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#FFCB6B;">staticmethod</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># esse m\xE9todo \xE9 respons\xE1vel por fazer attach dos bancos na sess\xE3o atual</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># ele \xE9 chamada pelo evento de cria\xE7\xE3o da conex\xE3o l\xE1 no create_engine</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">attach_databases</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> databases </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_databases</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> filename </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> databases</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> filename</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">endswith</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.sqlite</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> filename </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">DB1_NAME</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                    session</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">execute</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">                        </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;ATTACH DATABASE &#39;db/</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">filename</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&#39; AS </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">os</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splitext</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">filename</span><span style="color:#89DDFF;">)[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">                    </span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#FFCB6B;">staticmethod</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># este m\xE9todo \xE9 chamado via evento ap\xF3s cada commit</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># ele \xE9 respons\xE1vel por analisar se h\xE1 necessidade de criar um novo banco de dados</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># e caso seja, chama o m\xE9todo create_new_database</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># que pensando agora nem precisaria existir o m\xE9todo create_new_database kkkk</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">manage_database_size</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        smallest_db </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_smallest_db</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        file_size </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> os</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getsize</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;db/</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">smallest_db</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">.sqlite&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> file_size </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">MAX_FILE_SIZE_MB</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create_new_database</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div><p>J\xE1 na classe <code>DatabaManager</code> eu mantive as coisas mais normais de banco de dados. Tamb\xE9m precisei fazer uma gambiarrinha na classe do model para trocar o schema dinamicamente, mas j\xE1 tive ideias melhores para isso isso, s\xF3 que n\xE3o mexi ainda.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki"><code><span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DatabaseManager</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">__init__</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">self</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;"># aqui a gente faz setup da classe que \xE9 usada l\xE1 dentro do sistema</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;"># cria a conex\xE3o e define os m\xE9todos que ser\xE3o chamados em determinados eventos para</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;"># gerir a quest\xE3o do particionamento</span></span>
<span class="line"><span style="color:#A6ACCD;">        engine </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">create_engine</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;sqlite:///db/</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">DB1_NAME</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listen</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">engine</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">connect</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">attach_databases</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">Session</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sessionmaker</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">bind</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">engine</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">session</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Session</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">session</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">after_commit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">manage_database_size</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">new_post</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">title</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">content</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">content_format</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">extra</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">image</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;"># aqui precisei fazer a gambiarra com o model do Post, mas da pra ficar mais abstrato</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;"># vou melhorar isso em breve</span></span>
<span class="line"><span style="color:#A6ACCD;">        smallest_db </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_smallest_db</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Post</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#A6ACCD;">title</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">title</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#A6ACCD;">content</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">content</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#A6ACCD;">content_format</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">content_format</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">path</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#A6ACCD;">extra</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">extra</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">date</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#A6ACCD;">image</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">image</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#676E95;"># would be nice do it better, but sqlalchemy orm has no support</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#A6ACCD;">schema</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">smallest_db </span><span style="color:#89DDFF;">if</span><span style="color:#82AAFF;"> smallest_db </span><span style="color:#89DDFF;">!=</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">db1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">else</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">None,</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_fetch_pagination_mapped</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">offset</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">limit</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;"># esse m\xE9todo executa as queries agrupadas de forma paginada e </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;"># faz o map para o model sqlalchemy.orm no final </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;"># fiz isso para n\xE3o precisar alterar como o dado \xE9 acessado nos outros lugares</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;"># e manter o padr\xE3o</span></span>
<span class="line"><span style="color:#A6ACCD;">        union_query </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ShardingManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">generate_union_posts_query</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        query </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;SELECT * FROM (</span><span style="color:#F78C6C;">{</span><span style="color:#A6ACCD;">union_query</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">) AS all_posts LIMIT :limit OFFSET :offset&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">session</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">execute</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">text</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">query</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">limit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> limit</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">offset</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> offset</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">        posts </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fetchall</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        posts_dicts </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> post_tuple </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> posts</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            post_dict </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> column </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">enumerate</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">keys</span><span style="color:#89DDFF;">()):</span></span>
<span class="line"><span style="color:#A6ACCD;">                post_dict</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">column</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> post_tuple</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">idx</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">            posts_dicts</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">post_dict</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#82AAFF;">Post</span><span style="color:#89DDFF;">(**</span><span style="color:#82AAFF;">post_dict</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> post_dict </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> posts_dicts</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">generator_page_posts</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">total_by_page</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">max_posts_server</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">None):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;"># esse m\xE9todo \xE9 respons\xE1vel por fazer a pagina\xE7\xE3o mas retornando um generator</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;"># ent\xE3o eu consigo iterar em todas as p\xE1ginas sem carregar tudo na mem\xF3ria e </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;"># abstrair de forma bem legal para ser consumido l\xE1 do outro lado</span></span>
<span class="line"><span style="color:#A6ACCD;">        total </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">count_total_posts</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        fetched </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">        offset </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> max_posts_server </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> total_by_page </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> max_posts_server</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            total_by_page </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> max_posts_server</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> fetched </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> total</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            posts </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_fetch_pagination_mapped</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">offset</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">offset</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">limit</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">total_by_page</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            fetched </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">posts</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            offset </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> offset </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> total_by_page</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">yield</span><span style="color:#A6ACCD;"> posts</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> max_posts_server </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> fetched </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> max_posts_server</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">break</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>Ent\xE3o resumindo a funcionalidade, o que acontece \xE9 que ap\xF3s um commit ser executado, nosso analisador verifica se o banco atual j\xE1 atingiu o tamanho permitido, caso sim, o novo banco ser\xE1 criado e anexado a sess\xE3o atual. Al\xE9m disso, O INSERT precisa definir que o pr\xF3ximo INSERT ser\xE1 feito no novo banco pois isso n\xE3o \xE9 autom\xE1tico.</p><p>E para fazer as consultas, precisamos fazer UNION dos selects de todos os bancos e a\xED podemos fazer consultas de forma global.</p><p>Falando assim parece bem simples, de fato talvez seja mesmo, principalmente agora que est\xE1 pronto kkk</p><p>Te convido a dar uma olhada no <a href="https://github.com/sr2ds/coeur" target="_blank" rel="noreferrer">reposit\xF3rio</a> e aprender um pouco mais, caso tenha algumas ideias para melhorar algo, fique a vontade. N\xE3o sou ninja em nada e sempre podemos melhorar algo.</p><p>Valeu, at\xE9 a pr\xF3xima!</p>`,29),D=s("iframe",{src:"https://giphy.com/embed/3o7qDEq2bMbcbPRQ2c",width:"480",height:"331",style:{},frameBorder:"0",class:"giphy-embed",allowFullScreen:""},null,-1),i=s("p",null,[s("a",{href:"https://giphy.com/gifs/mic-drop-peace-out-obama-3o7qDEq2bMbcbPRQ2c"},"via GIPHY")],-1),y=[l,t,r,c,F,D,i];function A(C,d,m,u,f,b){return e(),n("div",null,y)}const _=o(p,[["render",A]]);export{h as __pageData,_ as default};
