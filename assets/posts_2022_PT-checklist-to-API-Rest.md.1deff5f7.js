import{_ as a,c as e,o,d as r}from"./app.a6b88af1.js";const v=JSON.parse('{"title":"Checklist para desenvolver uma API de respeito","description":"","frontmatter":{},"headers":[{"level":2,"title":"Automatizar cria\xE7\xE3o de pacotes para o consumo da API","slug":"automatizar-criacao-de-pacotes-para-o-consumo-da-api","link":"#automatizar-criacao-de-pacotes-para-o-consumo-da-api","children":[]},{"level":2,"title":"Facilitar a importa\xE7\xE3o para o Insominia ou Postman","slug":"facilitar-a-importacao-para-o-insominia-ou-postman","link":"#facilitar-a-importacao-para-o-insominia-ou-postman","children":[]}],"relativePath":"posts/2022/PT-checklist-to-API-Rest.md"}'),s={name:"posts/2022/PT-checklist-to-API-Rest.md"},t=r('<h1 id="checklist-para-desenvolver-uma-api-de-respeito" tabindex="-1">Checklist para desenvolver uma API de respeito <a class="header-anchor" href="#checklist-para-desenvolver-uma-api-de-respeito" aria-hidden="true">#</a></h1><p><a href="https://www.tabnews.com.br/srdavidsilva/checklist-para-desenvolver-uma-api-de-respeito" target="_blank" rel="noreferrer">https://www.tabnews.com.br/srdavidsilva/checklist-para-desenvolver-uma-api-de-respeito</a></p><p>Existem alguns detalhes que v\xE3o al\xE9m de s\xF3 fazer funcionar, alguns caprichos v\xE3o melhorar a experi\xEAncia de quem consome suas APIs e ainda torn\xE1-la um pouco mais segura.</p><p>Vamos montar juntos um checklist de itens que s\xE3o cruciais para o bom desenvolvimento de uma API? Vou come\xE7ar listando os t\xF3picos e voltarei atualizando cada t\xF3pico com a ajuda de voc\xEAs.</p><p>\xC9 verdade que muitos frameworks j\xE1 fornecem muito destes itens por padr\xE3o, mas vamos tentar montar um guia framework-less. Ou seja, o que deve ser pensado independente de qual sua linguagem ou framework.</p><hr><h1 id="_1-validacao-do-request" tabindex="-1">1. Valida\xE7\xE3o do Request <a class="header-anchor" href="#_1-validacao-do-request" aria-hidden="true">#</a></h1><p>Nunca pense que o consumidor vai realmente passar os dados corretos como voc\xEA informar. E se ele passar um negativo enquanto seu banco est\xE1 com o campo integer? Voc\xEA vai retornar o erro de banco para ele?</p><p>Validar o payload antes mesmo de process\xE1-lo \xE9 muito importante, al\xE9m de melhorar a seguran\xE7a da sua API, ainda ajudar\xE1 a tornar os retornos mais amig\xE1veis. Acredite, parece algo superf\xEDcial mas \xE9 de extremo valor.</p><h1 id="_2-tratativa-de-erros-padrao" tabindex="-1">2. Tratativa de Erros Padr\xE3o <a class="header-anchor" href="#_2-tratativa-de-erros-padrao" aria-hidden="true">#</a></h1><p>Tamb\xE9m \xE9 importante que os erros sejam tratados. Caso d\xEA algum erro imprevisto, talvez por alguma tratativa de banco que voc\xEA n\xE3o conhecia ou pensou, talvez por alguma falha de integra\xE7\xE3o entre multiplos servi\xE7os, etc.. \xC9 uma boa pr\xE1tico voc\xEA ter um arquivo para controlar os retornos de erros, algo como um <code>ErrorHandler</code>. De forma que voc\xEA possa fazer um <code>try catch</code> no seu controlador e retornar o <code>ErrorHandler</code> com a exce\xE7\xE3o capturada. E l\xE1 no <code>ErrorHandler</code>, voc\xEA pode ter um retorno padr\xE3o mas tamb\xE9m pode tratar as exce\xE7\xF5es uma a uma.</p><h1 id="_3-paginacao" tabindex="-1">3. Pagina\xE7\xE3o <a class="header-anchor" href="#_3-paginacao" aria-hidden="true">#</a></h1><p>Para proteger sua aplica\xE7\xE3o e melhorar a experi\xEAncia de seus consumidores, voc\xEA n\xE3o vai querer permitir que uma lista de usu\xE1rios com 10mil linhas seja entregue no request, certo? Para isso que nos ajudar\xE1 a pagina\xE7\xE3o. Existem maneiras de fazer isso, eu particularmente gosto muito de utilizar os atributos: <code>offset</code> e <code>limit</code>, fica simples de implementar no backend e simples de utilizar no frontend.</p><h1 id="_4-documentacao-swagger-e-openapi" tabindex="-1">4. Documenta\xE7\xE3o - Swagger e OpenAPI <a class="header-anchor" href="#_4-documentacao-swagger-e-openapi" aria-hidden="true">#</a></h1><p>Documentar como sua API pode ser consumida, ajudar\xE1 voc\xEA a manter os padr\xF5es estabelecidos pela equipe, facilitar\xE1 a vida do seu consumidor e ainda te dar\xE1 certos poderes como:</p><h2 id="automatizar-criacao-de-pacotes-para-o-consumo-da-api" tabindex="-1">Automatizar cria\xE7\xE3o de pacotes para o consumo da API <a class="header-anchor" href="#automatizar-criacao-de-pacotes-para-o-consumo-da-api" aria-hidden="true">#</a></h2><p>Existem pacotes que pegam a sua documenta\xE7\xE3o gerada, e criam para voc\xEA pacotes para diversas linguagens. Como se fosse um SDK da sua API, simplificando a vida do consumidor, seja ele um servi\xE7o rodando em <code>node</code>, <code>python</code> ou <code>php</code>.</p><h2 id="facilitar-a-importacao-para-o-insominia-ou-postman" tabindex="-1">Facilitar a importa\xE7\xE3o para o Insominia ou Postman <a class="header-anchor" href="#facilitar-a-importacao-para-o-insominia-ou-postman" aria-hidden="true">#</a></h2><p>Com o arquivo gerado pelo swagger, voc\xEA pode facilmente importar todas as rotas da sua API para seu aplicativo favorito.</p><h1 id="_5-validacao-e-padrao-do-response" tabindex="-1">5. Valida\xE7\xE3o e Padr\xE3o do Response <a class="header-anchor" href="#_5-validacao-e-padrao-do-response" aria-hidden="true">#</a></h1><p>\xC9 importante que sua API tenha um padr\xE3o nas respostas. Ou seja, utilizar um formato de payload comum entre todas as respostas e tamb\xE9m utilizar <code>STATUS CODES</code> corretos.</p><p>Al\xE9m disso, \xE9 importante validar a sa\xEDda deste response, n\xE3o apenas entregar o resultado do banco de dados, mas validar a sa\xEDda na modelagem do response. Ou seja, se o consumidor est\xE1 chamando algo como <code>users/{id}</code>, n\xF3s podemos modelar o response para algo como: <code>{ id: &quot;2&quot;, name: &quot;usuario X&quot; }</code>. De forma que, mesmo que o seu <code>ORM</code> retorne o <code>password</code>, o mesmo n\xE3o ser\xE1 entregue na requisi\xE7\xE3o.</p><h1 id="_6-testes-automatizados" tabindex="-1">6. Testes Automatizados <a class="header-anchor" href="#_6-testes-automatizados" aria-hidden="true">#</a></h1><p>\xC9 crucial que suas APIs possuam testes automatizados para que voc\xEA n\xE3o fique ref\xE9m de ter que testar tudo manualmente a cada mudan\xE7a. Os testes em APIs podem ser simples de se fazer e bastante reaproveitados, com simples chamadas em cada endpoint e uma valida\xE7\xE3o se o <code>payload</code> recebido \xE9 como esperado.</p><p>Testes de APIs bem modelados podem ajudar a prevenir mudan\xE7as que ferem as regras de neg\xF3cios pensadas l\xE1 atr\xE1s no inicio do projeto e que que realmente n\xE3o devem ser alteradas.</p><p>Por exemplo, voc\xEA pode fazer um teste para validar que caso algu\xE9m tente alterar o <code>last_name</code> do usu\xE1rio, ele n\xE3o ser\xE1 alterado. Um teste pode ajudar a garantir que essa simples regra n\xE3o seja quebrada quando houver alguma mudan\xE7a no m\xE9todo de atualiza\xE7\xE3o do usu\xE1rio.</p><hr><p>Lembrando que a ideia desta publica\xE7\xE3o \xE9 unirmos nosso conhecimento para montar um guia bem organizado e modelado. E a\xED, o que podemos incluir/alterar?</p>',28),d=[t];function i(n,c,m,p,u,l){return o(),e("div",null,d)}const g=a(s,[["render",i]]);export{v as __pageData,g as default};
