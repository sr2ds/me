import{_ as e,c as a,o,d as t}from"./app.a6b88af1.js";const b=JSON.parse('{"title":"Integrando Jenkins e Gitlab","description":"","frontmatter":{},"headers":[{"level":2,"title":"Configura\xE7\xE3o Jenkins","slug":"configuracao-jenkins","link":"#configuracao-jenkins","children":[]},{"level":2,"title":"Configura\xE7\xE3o gitlab","slug":"configuracao-gitlab","link":"#configuracao-gitlab","children":[]}],"relativePath":"posts/2020/integrando-jenkins-e-gitlab.md"}'),i={name:"posts/2020/integrando-jenkins-e-gitlab.md"},n=t('<h1 id="integrando-jenkins-e-gitlab" tabindex="-1">Integrando Jenkins e Gitlab <a class="header-anchor" href="#integrando-jenkins-e-gitlab" aria-hidden="true">#</a></h1><p>Automatizar certas tarefas far\xE1 sua vida ser muito mais pr\xE1tica e produtiva. Um exemplo bom de tarefas que DEVEM ser automatizadas \xE9 o deploy.</p><p>Talvez voc\xEA ainda n\xE3o tenha os <code>stages</code> ideais para fazer a build e publicar em produ\xE7\xE3o de forma autom\xE1tica, mas isso n\xE3o pode te impedir de automatizar os ambientes de desenvolvimento e homologa\xE7\xE3o, por exemplo.</p><p>Se voc\xEA j\xE1 tem tarefas no Jenkins e usa o GitLab, isso pode ser feito de uma forma bem simples e r\xE1pida:</p><h2 id="configuracao-jenkins" tabindex="-1">Configura\xE7\xE3o Jenkins <a class="header-anchor" href="#configuracao-jenkins" aria-hidden="true">#</a></h2><p>Vamos precisar de um token para a autentica\xE7\xE3o acontecer, acesse a configura\xE7\xE3o de um usu\xE1rio que tenha permiss\xE3o no seus jobs. Algo como: <code>http://LINK_JENKINS/user/admin/configure</code></p><p>Nesta p\xE1gina voc\xEA poder\xE1 administrar os tokens.</p><p><img src="https://dev-to-uploads.s3.amazonaws.com/i/8ghaee1xyhsalqtusl4i.png" alt="Administra\xE7\xE3o de Usu\xE1rio no Jenkins - Input de cria\xE7\xE3o de Token"></p><p>Agora que temos o token e usu\xE1rio em m\xE3os, s\xF3 precisamos configurar o projeto l\xE1 no GitLab.</p><h2 id="configuracao-gitlab" tabindex="-1">Configura\xE7\xE3o gitlab <a class="header-anchor" href="#configuracao-gitlab" aria-hidden="true">#</a></h2><p>No gitlab, acesse seu projeto e v\xE1 no Menu <code>Configura\xE7\xF5es &gt; Integra\xE7\xF5es</code>.</p><p>Nesta tela voc\xEA poder\xE1 definir integra\xE7\xF5es de plugins que est\xE3o configuradas no seu Jenkins e tamb\xE9m cadastrar Hooks manuais, como faremos.</p><p>No meu caso, quero que quando houver Merge Requests com uma branch espec\xEDfica, o script de deploy seja executado. Veja a imagem abaixo:</p><p><img src="https://dev-to-uploads.s3.amazonaws.com/i/7t404qhxtb7cdqxvybto.png" alt="Configura\xE7\xE3o de Webhook de um projeto no GitLab"></p><p>Seu link dever\xE1 ser a combina\xE7\xE3o de um usu\xE1rio, token e o Job do Jenkins: <code>http://USER:TOKEN@LINK_JENKINS/view/Fronted/job/Frontend/build</code></p><p>Nesse caso, <code>view/Fronted/job/Frontend/build</code> \xE9 um atalho para meu Job. Tamb\xE9m pode ser o link direto do Job: <code>/job/NOME/build</code>.</p><p>Isso \xE9 o suficiente para as rotinas acontecerem automaticamente. Claro que \xE9 uma configura\xE7\xE3o b\xE1sica mas poder\xE1 simplificar um pouco sua vida.</p><p>At\xE9 a pr\xF3xima.</p><p>Cr\xE9ditos da capa: <a href="https://letztest.blogspot.com/2017/09/how-to-integrate-jenkins-and-gitlab.html" target="_blank" rel="noreferrer">https://letztest.blogspot.com/2017/09/how-to-integrate-jenkins-and-gitlab.html</a></p>',19),s=[n];function r(d,c,p,u,m,l){return o(),a("div",null,s)}const h=e(i,[["render",r]]);export{b as __pageData,h as default};
