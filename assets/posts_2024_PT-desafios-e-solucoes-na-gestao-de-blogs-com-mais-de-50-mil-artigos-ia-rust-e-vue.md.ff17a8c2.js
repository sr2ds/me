import{_ as e,c as o,o as a,d as s}from"./app.d643be22.js";const r="/me/assets/github-1.68c60a1f.png",i="/me/assets/github-2.bf7eaa51.png",t="/me/assets/github-3.ec231e4e.png",m="/me/assets/github-4.fcec6b65.png",q=JSON.parse('{"title":"Desafios e solu\xE7\xF5es na Gest\xE3o de blogs com +50 mil artigos - IA, Rust e Vue","description":"","frontmatter":{},"headers":[{"level":2,"title":"Knowledge-pill","slug":"knowledge-pill","link":"#knowledge-pill","children":[]},{"level":2,"title":"VuePress","slug":"vuepress","link":"#vuepress","children":[{"level":3,"title":"Por que VuePress?","slug":"por-que-vuepress","link":"#por-que-vuepress","children":[]},{"level":3,"title":"Como foi a migra\xE7\xE3o de WP para VuePress","slug":"como-foi-a-migracao-de-wp-para-vuepress","link":"#como-foi-a-migracao-de-wp-para-vuepress","children":[]}]},{"level":2,"title":"O primeiro problema - Build comendo muita mem\xF3ria","slug":"o-primeiro-problema-build-comendo-muita-memoria","link":"#o-primeiro-problema-build-comendo-muita-memoria","children":[]},{"level":2,"title":"O segundo problema - Build demorando muito","slug":"o-segundo-problema-build-demorando-muito","link":"#o-segundo-problema-build-demorando-muito","children":[]},{"level":2,"title":"O terceiro problema - Build demorando muito de novo e ainda comendo muita mem\xF3ria","slug":"o-terceiro-problema-build-demorando-muito-de-novo-e-ainda-comendo-muita-memoria","link":"#o-terceiro-problema-build-demorando-muito-de-novo-e-ainda-comendo-muita-memoria","children":[]},{"level":2,"title":"O quarto problema - Criei artigos demais?","slug":"o-quarto-problema-criei-artigos-demais","link":"#o-quarto-problema-criei-artigos-demais","children":[]},{"level":2,"title":"Zola - 20 mil artigos","slug":"zola-20-mil-artigos","link":"#zola-20-mil-artigos","children":[]},{"level":2,"title":"Por que Zola?","slug":"por-que-zola","link":"#por-que-zola","children":[{"level":3,"title":"Como foi a migra\xE7\xE3o de VuePress para Zola","slug":"como-foi-a-migracao-de-vuepress-para-zola","link":"#como-foi-a-migracao-de-vuepress-para-zola","children":[]},{"level":3,"title":"Componentes Vue","slug":"componentes-vue","link":"#componentes-vue","children":[]}]}],"relativePath":"posts/2024/PT-desafios-e-solucoes-na-gestao-de-blogs-com-mais-de-50-mil-artigos-ia-rust-e-vue.md"}'),u={name:"posts/2024/PT-desafios-e-solucoes-na-gestao-de-blogs-com-mais-de-50-mil-artigos-ia-rust-e-vue.md"},n=s('<h1 id="desafios-e-solucoes-na-gestao-de-blogs-com-50-mil-artigos-ia-rust-e-vue" tabindex="-1">Desafios e solu\xE7\xF5es na Gest\xE3o de blogs com +50 mil artigos - IA, Rust e Vue <a class="header-anchor" href="#desafios-e-solucoes-na-gestao-de-blogs-com-50-mil-artigos-ia-rust-e-vue" aria-hidden="true">#</a></h1><p>Hoje vou falar um pouco sobre os desafios que eu passei ao escalar um site com muito conte\xFAdo.</p><p>Isso tudo come\xE7a com WordPress, eu j\xE1 trabalhei com WordPress h\xE1 algum tempo, muitos bloguinhos e sites institucionais, coisas pequenas e com poucos acessos. WordPress \xE9 uma ferramenta super \xFAtil para construir blogs e mant\xEA-los sem precisar de muito conhecimento t\xE9cnico, ele tem l\xE1 seus problemas mas resolve o problema de muita gente e n\xE3o vou falar mal dele aqui.</p><p>No meu caso, eu tenho criado blogs de conte\xFAdos diversos j\xE1 fazem alguns anos, comecei com WordPress. Quando a era da IA chegou, n\xE3o foi diferente, eu incrementei o que eu j\xE1 tinha e comecei outras coisas do zero.</p><p>Para contextualizar o momento atual disso, por muitos anos eu gastei v\xE1rios trocados com hospedagens para tentar levantar blogs e eu estava cansado disso. Em determinado momento, eu comecei a migrar tudo de CMS&#39;s para conte\xFAdos est\xE1ticos e hospedar tudo no GitHub Page e Netlify.</p><p>At\xE9 ent\xE3o eram coisas menores, digamos que no m\xE1ximo 200 artigos cada blog. Quando a era IA chegou, eu j\xE1 estava trabalhando com arquivos est\xE1ticos, meus projetos estavam todos em VuePress, que \xE9 um excelente gerador de assets baseados em Vue.js.</p><h2 id="knowledge-pill" tabindex="-1">Knowledge-pill <a class="header-anchor" href="#knowledge-pill" aria-hidden="true">#</a></h2><p>Olha s\xF3 como \xE9 valioso inventar coisas, mesmo que pare\xE7a que n\xE3o d\xE1 retorno, sempre h\xE1 algum retorno.</p><p>Toda essa brincadeira me deu algumas no\xE7\xF5es de SEO, Ads, tr\xE1fego, etc. Tudo isso foi muito legal, mas veja tecnicamente pontos interessantes que tive a oportunidade de fazer para tentar por em pr\xE1tica coisas da minha cabe\xE7a:</p><ul><li>Explorar ferramentas para sair do WordPress;</li><li>Scripts de migra\xE7\xF5es entre plataformas;</li><li>Constru\xED integra\xE7\xF5es com Google Index API;</li><li>Aprendi a analisar as coisas pensando no SEO e fazer acompanhamento de indexa\xE7\xE3o;</li><li>Integra\xE7\xE3o com IA - OpenAi e Gemini;</li><li>Criei um &quot;framework&quot; de cria\xE7\xE3o de conte\xFAdos em lote com multi-providers;</li></ul><p>Tudo isso porque eu quis brincar e por algumas ideias da minha cabe\xE7a em pr\xE1tica.</p><p>Ent\xE3o a Knowledge-pill aqui \xE9: Construa coisas que voc\xEA acredita serem legais, mesmo que por divers\xE3o.</p><h2 id="vuepress" tabindex="-1">VuePress <a class="header-anchor" href="#vuepress" aria-hidden="true">#</a></h2><p>O VuePress nos permite construir os componentes em Vue (e eu gosto muito de Vue), por\xE9m, ele nos permite fazer um Build que nos entrega os arquivos est\xE1ticos p\xF3s-renderiza\xE7\xE3o. Ent\xE3o o processo de build se traduz em executar subir a inst\xE2ncia do projeto e sair fazendo download de todas as p\xE1ginas j\xE1 renderizadas do site.</p><p>Isso funciona muito bem para sites menores, na verdade funcionou bem pra mim at\xE9 uns 10 mil artigos.</p><h3 id="por-que-vuepress" tabindex="-1">Por que VuePress? <a class="header-anchor" href="#por-que-vuepress" aria-hidden="true">#</a></h3><p>O objetivo era n\xE3o gastar com infra para hospedar os projetos e o VuePress me recebeu muito bem, primeiro pelo fato de eu ter experi\xEAncia e gostar de Vue, segundo por que a documenta\xE7\xE3o estava bem legal. Ent\xE3o \xE9 s\xF3 por isso.</p><h3 id="como-foi-a-migracao-de-wp-para-vuepress" tabindex="-1">Como foi a migra\xE7\xE3o de WP para VuePress <a class="header-anchor" href="#como-foi-a-migracao-de-wp-para-vuepress" aria-hidden="true">#</a></h3><p>O WordPress utiliza um banco de dados <code>MySQL</code>, enquanto que o VuePress tem sua base de dados no pr\xF3prio c\xF3digo fonte do projeto, que s\xE3o documentos no formato <code>Markdown</code>.</p><p>A migra\xE7\xE3o n\xE3o se trata apenas dos conte\xFAdos dos posts, eu precisei adaptar algum layout do VuePress para ficar mais pr\xF3ximo ao que eu j\xE1 tinha no WordPress. Por sorte, no meu caso, os meus layouts n\xE3o fugiam muito de coisas b\xE1sicas e r\xE1pidas para migrar, ent\xE3o n\xE3o foi algo muito complexo.</p><p>Al\xE9m do layout, \xE9 importante entender como \xE9 sua estrutura de URLs pois \xE9 muito muito ruim quebrar isso, ent\xE3o eu precisei encontrar uma forma de estruturar o novo projeto de forma que as URLs fossem exatamente iguais.</p><p>A migra\xE7\xE3o dos conte\xFAdos em si se trata de pegar os conte\xFAdos de cada post, convert\xEA-los para o formato markdown, incluir algumas nota\xE7\xF5es necess\xE1rias em cada arquivo gerado e, claro, tamb\xE9m n\xE3o pode se esquecer das imagens.</p><p>Honestamente, eu n\xE3o me recordo se eu fiz isso manualmente ou se encontrei alguma tool que facilitou parte do trabalho. Me lembro de ter encontrado algo que ajudava a converter de HTML para Markdown, mas n\xE3o lembro se funcionou como previsto. Uma coisa \xE9 certa, foram v\xE1rios detalhes que precisei fazer na m\xE3o al\xE9m de s\xF3 &quot;converter&quot; cada post. Mas fui conseguindo fazer pequenos scripts para me ajudar no decorrer do processo.</p><p>A migra\xE7\xE3o foi relativamente simples, pelo que me lembro demorei alguns dias para entender todos os pontos e finalizar algumas migra\xE7\xF5es, sei l\xE1, no m\xE1ximo 15 dias e eu j\xE1 tinha conseguido boa parte fazendo apenas nas minhas horas extras.</p><p>Listando pontos de aten\xE7\xE3o no trabalho de migra\xE7\xE3o, eu diria:</p><ul><li>Estrutura de URLs;</li><li>Layout com pagina\xE7\xE3o - para estruturas de URLs personalizadas \xE9 preciso algum n\xEDvel de customiza\xE7\xE3o;</li><li>Estrutura do HTML gerado;</li><li>Entender op\xE7\xF5es personalizadas do VuePress. ex: chunk de arquivos;</li><li>Tempo de build e consumo de mem\xF3ria.</li></ul><p>Um ponto a considerar, caso voc\xEA n\xE3o seja desenvolvedor e esteja lendo isso com intuito de fazer algo assim, h\xE1 muitos processos manuais e para v\xE1rias etapas eu preciso criar algum algoritmo para ajustar algo, n\xE3o foi t\xE3o autom\xE1tico o processo. Para casos com poucos conte\xFAdos, acredito que tudo bem fazer manualmente. Mas para blogs grandes, j\xE1 fica mais complexo.</p><p>H\xE1! No meu caso os projetos realmente s\xE3o de conte\xFAdos. N\xE3o tem nada din\xE2mico que precise de banco de dados ou alguma m\xE1gica de backend, t\xEAm uma coisa ou outra din\xE2mica mas consigo resolver tudo com <code>javascript</code> direto no front mesmo.</p><h2 id="o-primeiro-problema-build-comendo-muita-memoria" tabindex="-1">O primeiro problema - Build comendo muita mem\xF3ria <a class="header-anchor" href="#o-primeiro-problema-build-comendo-muita-memoria" aria-hidden="true">#</a></h2><p>Em Abril de 2023, eu comecei a ter dificuldades para fazer builds e fui em busca de <a href="https://github.com/vuepress/core/issues/994" target="_blank" rel="noreferrer">ajuda para comunidade</a>:</p><p><img src="'+r+'" alt="github comment 1"></p><p>Eu estava apenas com cerca de 2k artigos ainda mas as builds estavam rompendo o limite padr\xE3o no Netlify na \xE9poca e eu fiquei preso nisso.</p><p>Pesquisei e testei algumas coisas, o debate \xE9 bem grande a respeito disso voc\xEA pode ver no link acima.</p><p>Eu tentei algumas coisas, explorei um pouco o c\xF3digo fonte do <code>vuepress</code> e tentei contribuir com minhas descobertas nos debates que estavam rolando, tipo aqui:</p><p><img src="'+i+'" alt="github comment 2"></p><p>Nessa fase do projeto, eu parei de sofrer e aumentei os limites no Netlify para as builds funcionarem, mantendo ainda tudo free, apenas fazendo ajustes de configura\xE7\xE3o e deu tudo certo por um tempo. A \xFAnica coisa errada era a build que estava demorando cada vez mais.</p><h2 id="o-segundo-problema-build-demorando-muito" tabindex="-1">O segundo problema - Build demorando muito <a class="header-anchor" href="#o-segundo-problema-build-demorando-muito" aria-hidden="true">#</a></h2><p>Estava tudo indo bem mas o processo de build estava demorando MUITO e o limite do plano free (300 minutos por m\xEAs) n\xE3o estava dando conta mais.</p><p>Lembre-se: O objetivo \xE9 manter FREEE.</p><p>Ent\xE3o eu precisei mexer um pouco mais a fundo no c\xF3digo do vuepress para tentar entender se havia uma maneira de liberar a mem\xF3ria RAM presa em tempo de build. Foi ent\xE3o que eu entendi que o processo poderia ser melhor se fosse feito em lote.</p><p>Foi ent\xE3o que eu este <a href="https://github.com/vuejs/vitepress/pull/3285/files" target="_blank" rel="noreferrer">PullRequest para o VuePress</a>, com uma mera mudan\xE7a que fazia o processamento ser dividido em lotes, fazendo com a mem\xF3ria fosse liberada a cada lote executado. Isso definitivamente resolveu meu problema e ficou consideravelmente melhor.</p><p><img src="'+t+'" alt="github comment 3"></p><p>Meu Pull Request n\xE3o foi aprovado, mas um outro cara fez um trabalho pr\xF3ximo da minha ideia de processar em lote mas usando o <code>pMap</code>. Que engra\xE7ado, eu desenvolvi com a premissa de n\xE3o incluir depend\xEAncia mas o PR aprovado foi bem com a l\xF3gica inversa kkk</p><p>Enfim, enquanto o PR de ningu\xE9m era aprovado, eu fui usando minha pr\xF3pria vers\xE3o. Quando o PR do amigo foi aprovado, eu voltei para vers\xE3o oficial.</p><h2 id="o-terceiro-problema-build-demorando-muito-de-novo-e-ainda-comendo-muita-memoria" tabindex="-1">O terceiro problema - Build demorando muito de novo e ainda comendo muita mem\xF3ria <a class="header-anchor" href="#o-terceiro-problema-build-demorando-muito-de-novo-e-ainda-comendo-muita-memoria" aria-hidden="true">#</a></h2><p>Leve em considera\xE7\xE3o que os conte\xFAdos s\xE3o gerados por IA, ent\xE3o eu podia criar mil artigos por dia quando eu queria, ent\xE3o o processo de crescimento dos conte\xFAdos estava sendo bem r\xE1pido.</p><p>A build voltou a demorar muito tempo e eu decidi mudar o processo de build para o Github Actions pois l\xE1 o tempo de build pode ser bem maior. Ent\xE3o eu estava fazendo a build no GitHub e publicando no Netlify apenas os assets j\xE1 gerados, isso resolveu o problema e o projeto continuou a crescer.</p><h2 id="o-quarto-problema-criei-artigos-demais" tabindex="-1">O quarto problema - Criei artigos demais? <a class="header-anchor" href="#o-quarto-problema-criei-artigos-demais" aria-hidden="true">#</a></h2><p>Agora houve uma jun\xE7\xE3o de problemas que, demorava MUITO e o processo de esvaziamento de mem\xF3ria j\xE1 n\xE3o era suficiente.</p><p>A Build rolava por 55 minutos e quebrava.</p><p>Na minha m\xE1quina, eu tenho 12 GB de mem\xF3ria RAM e uso Linux com XFCE, ent\xE3o se eu n\xE3o abrir nada, eu tenho 10GB livres de boa, mas nem com meus 10GB de mem\xF3ria eu n\xE3o conseguia fazer a build aqui.</p><p>Ent\xE3o o processo ficou muito complexo at\xE9 para eu fazer debug disso, cansativo e minhas tentativas pareciam ineficientes. (PS mental: Se t\xE1 dif\xEDcil \xE9 por que estudei pouco, preciso estudar mais).</p><p>Nesse momento eu parei de tentar e fiquei estudando e refletindo sobre as alternativas e sobre o processo de Build.</p><p>O problema do VuePress no meu contexto \xE9 que ele sobe o site e meio que faz download de p\xE1gina por p\xE1gina. Ele faz isso para aproveitar do conte\xFAdo gerado com Vue e torn\xE1-lo est\xE1tico. No meu caso, eu fazia pouco uso do Vue para que isso fosse necess\xE1rio.</p><p>Com uma semana pensando nisso, eu considerei at\xE9 em fazer um pr\xF3prio builder que iria apenas usar um modelo de HTML padr\xE3o, pegar os Markdowns e criar manualmente cada p\xE1gina. Isso resolveria o problema.</p><p>Em algum momento veio um estalo: &quot;Cara, vai ver o que tem em Rust pra isso, Rust \xE9 lindo e performa bem.&quot;</p><p>Foi a\xED que eu encontrei o <a href="https://www.getzola.org/" target="_blank" rel="noreferrer">Zola</a>.</p><h2 id="zola-20-mil-artigos" tabindex="-1">Zola - 20 mil artigos <a class="header-anchor" href="#zola-20-mil-artigos" aria-hidden="true">#</a></h2><p>Essa frase me ganhou: &quot;The average site will be generated in less than a second, including Sass compilation and syntax highlighting.&quot;</p><p>Zola \xE9 uma tool escrita em Rust que faz builds transformando um punhado de arquivos em sites est\xE1ticos.</p><p>Diferente do VuePress, o Zola faz exatamente o que eu pensei que precisava, apenas algo que criasse arquivos baseado em outros. Obviamente o processo de build seria mais econ\xF4mico dessa forma e, com base na minha necessidade, serviria como uma luva.</p><p>Ent\xE3o l\xE1 vai eu testar, a migra\xE7\xE3o tomaria alguns dias, ent\xE3o eu tinha que entender se isso era real. Ent\xE3o eu criei 20k arquivos iguais para testar o tempo de build e, ADVINHA, foi top. Eu sei l\xE1, n\xE3o lembro mais quanto tempo foi, mas foi coisa de 2 minutos no m\xE1ximo.</p><p>J\xE1 estava muito melhor e provavelmente me permitiria escalar pelo menos umas 10x em n\xFAmero de publica\xE7\xF5es sem precisar me preocupar com isso.</p><p>Ent\xE3o comecei o processo de migra\xE7\xE3o de VuePress para Zola.</p><p>A cereja do bolo s\xE3o os markdowns, precisei fazer algumas mudan\xE7as nas nota\xE7\xF5es de cada post, mas o conte\xFAdo em si j\xE1 estava de boa.</p><h2 id="por-que-zola" tabindex="-1">Por que Zola? <a class="header-anchor" href="#por-que-zola" aria-hidden="true">#</a></h2><p>Eu sou f\xE3 de Rust. Um \xFAnico bin\xE1rio faz tudo. Resolveu o problema com maestria. E pronto, \xE9 isso.</p><h3 id="como-foi-a-migracao-de-vuepress-para-zola" tabindex="-1">Como foi a migra\xE7\xE3o de VuePress para Zola <a class="header-anchor" href="#como-foi-a-migracao-de-vuepress-para-zola" aria-hidden="true">#</a></h3><p>O Zola usa um template engine chamado Tera, me senti trabalhando com <code>blade</code> do <code>Laravel</code> e faziam anos que eu n\xE3o fazia isso, foi at\xE9 legal.</p><p>Encontrei um layout bonito, fiz adapta\xE7\xF5es para ficar o mais favor\xE1vel poss\xEDvel e layout ok.</p><p>A parte mais complexa foi conseguir entender como customizar o Zola para funcionar com base na minha estrutura de URLs <code>/yyyy/mm/dd/post-title</code>. Na documenta\xE7\xE3o n\xE3o est\xE1 claro como fazer isso e eu vi alguns coment\xE1rios na comunidade e no github dizendo que o Zola n\xE3o dava suporte a isso.</p><p>Mas eu insisti, fiz algumas perguntas aqui, outra ali e juntando isso e alguns testes eu consegui chegar no mesmo padr\xE3o de URL. Bingo!</p><p>Diferente do VuePress que precisei programar a cria\xE7\xE3o do <code>sitemap.xml</code>, o Zola j\xE1 entregou isso pronto e at\xE9 com a pagina\xE7\xE3o necess\xE1ria (1 sitemap a cada 50k links).</p><p>Eu diria que a migra\xE7\xE3o para o Zola foi mais complexa do que a primeira migra\xE7\xE3o, talvez por que o volume de posts est\xE1 maior e lidar com isso ficou menos r\xE1pido.</p><p>Mas no geral eu consegui resolver em tempo legal para voltar a criar conte\xFAdos.</p><p>Deixei algumas melhorias para ir resolvendo depois e voltei a criar conte\xFAdos.</p><p>Agora falando de performance, veja esta info da \xFAltima build:</p><p><img src="'+m+'" alt="build zola info"></p><p>Inacredit\xE1vel, n\xE9? Build de 67445 artigos em 74.0s.</p><h3 id="componentes-vue" tabindex="-1">Componentes Vue <a class="header-anchor" href="#componentes-vue" aria-hidden="true">#</a></h3><p>Como falei antes, eu queria um criador de HTML&#39;s, um conversor de markdown para HTML. Ent\xE3o, essa migra\xE7\xE3o me fez perder algumas coisas que eu havia constru\xEDdo em VueJs, poucas coisas, mas precisei refatorar um componente espec\xEDfico.</p><p>O Vue \xE9 um framework completo que nos permite criar a aplica\xE7\xE3o de Frontend do zero dentro de uma estrutura pr\xF3pria, por\xE9m, tamb\xE9m podemos usar o vue em formato embed dentro de qualquer site.</p><p>Ou seja, eu posso importar o vue de uma CDN e criar um componente ali mesmo, algumas coisas precisam ser alteradas e adaptadas, claro. Mas para meu caso, era apenas um componente que acessava uma API espec\xEDfica baseado no conte\xFAdo do post e renderizava algo na tela em formato de oferta para o usu\xE1rio. Eu poderia re-escrever tudo em javascript puro e fica de boa, mas eu considerei adaptar meu componente Vue e fazer o &quot;embed&quot; dele no novo layout. E pronto, eu consigo passar a info que eu quiser durante a Build para o HTML e, quando o usu\xE1rio renderizar o site, o Vue entra em a\xE7\xE3o e renderiza meu conte\xFAdo adicional. Vale lembrar que neste caso, meu conte\xFAdo adicional n\xE3o \xE9 requisito essencial no \xE2mbito de indexa\xE7\xE3o, ent\xE3o est\xE1 tudo bem.</p><h1 id="_65-mil-artigos-e-crescendo" tabindex="-1">65 mil artigos e crescendo <a class="header-anchor" href="#_65-mil-artigos-e-crescendo" aria-hidden="true">#</a></h1><p>At\xE9 agora o Zola est\xE1 dando conta do recado, a build \xE9 feita no Netlify mesmo e t\xEAm demorado cerca de 5 minutos.</p><p>Eu suponho que eu v\xE1 conseguir chegar nos 500 mil artigos sem precisar mexer muito na estrutura atual, vamos ver.</p><p>No meio de tudo isso, eu fui melhorando meus scripts de migra\xE7\xE3o e meu framework de cria\xE7\xE3o em lote, melhorando com features e performance, isso \xE9 muito legal. Mesmo que s\xF3 sirva pra mim e n\xE3o \xE9 um projeto open-source ainda.</p><p>Chegamos ao fim, a ideia foi contar um pouco sobre como \xE9 criar e manter sites com muitos conte\xFAdos, contar um pouco das minhas decis\xF5es estruturais para manter o projeto 100% free e compartilhar os desafios. E se voc\xEA tiver curioso para saber qual \xE9 o site em quest\xE3o, vai continuar curioso por enquanto kkkk Eu n\xE3o gosto muito de expor as coisas, mas o conhecimento \xE9 crucial que seja compartilhada, por isso eu escrevi o artigo com detalhes tecnicos.</p><p>Se voc\xEA \xE9 desenvolvedor e veio aqui com a inten\xE7\xE3o de sair com um conhecimento espec\xEDfico, leve com voc\xEA o pensamento de que construir coisas por n\xF3s mesmos nos fazem aprender muito.</p><p>Ent\xE3o se tiver alguma ideia que possa impulsionar seus conhecimentos de alguma forma, fa\xE7a.</p><p>Se voc\xEA est\xE1 em busca de aprendizado, n\xE3o interessa se ningu\xE9m vai usar ou ningu\xE9m vai considerar \xFAtil seu projeto, s\xF3 o fato de ir aprendendo a resolver os problemas que voc\xEA mesmo criar, vai te dar know-how para os projetos profissionais e te colocar a frente de quem n\xE3o fez nada \u{1F609}</p><p>At\xE9 mais!</p>',92),d=[n];function p(c,l,g,f,v,b){return a(),o("div",null,d)}const z=e(u,[["render",p]]);export{q as __pageData,z as default};
